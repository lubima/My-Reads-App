{"ast":null,"code":"import _objectSpread from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Bubenceto/Desktop/React/myreads/src/components/ContextProvider.js\";\nimport React, { Component } from 'react';\nexport var MyContext = React.createContext();\n\nvar ContextProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContextProvider, _Component);\n\n  function ContextProvider() {\n    var _this;\n\n    _classCallCheck(this, ContextProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContextProvider).call(this));\n    _this.state = {\n      books: [],\n      currentlyReading: [],\n      wantToRead: [],\n      read: [],\n      addBooks: function addBooks(books) {\n        var currentlyReading = books.filter(function (book) {\n          return book.shelf === 'currentlyReading';\n        });\n        var wantToRead = books.filter(function (book) {\n          return book.shelf === 'wantToRead';\n        });\n        var read = books.filter(function (book) {\n          return book.shelf === 'read';\n        });\n\n        _this.setState({\n          books: books,\n          currentlyReading: currentlyReading,\n          wantToRead: wantToRead,\n          read: read\n        });\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ContextProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MyContext.Provider, {\n        value: _objectSpread({}, this.state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return ContextProvider;\n}(Component);\n\nexport { ContextProvider as default };","map":{"version":3,"sources":["/Users/Bubenceto/Desktop/React/myreads/src/components/ContextProvider.js"],"names":["React","Component","MyContext","createContext","ContextProvider","state","books","currentlyReading","wantToRead","read","addBooks","filter","book","shelf","setState","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,IAAMC,SAAS,GAAGF,KAAK,CAACG,aAAN,EAAlB;;IACcC,e;;;;;AACnB,6BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,gBAAgB,EAAE,EAFP;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,QAAQ,EAAE,kBAAAJ,KAAK,EAAI;AACjB,YAAMC,gBAAgB,GAAGD,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,KAAL,KAAa,kBAAjB;AAAA,SAAjB,CAAzB;AACA,YAAML,UAAU,GAAGF,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,KAAL,KAAa,YAAjB;AAAA,SAAjB,CAAnB;AACA,YAAMJ,IAAI,GAAGH,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,KAAL,KAAa,MAAjB;AAAA,SAAjB,CAAb;;AACA,cAAKC,QAAL,CAAc;AAACR,UAAAA,KAAK,EAALA,KAAD;AAAOC,UAAAA,gBAAgB,EAAhBA,gBAAP;AAAwBC,UAAAA,UAAU,EAAVA,UAAxB;AAAmCC,UAAAA,IAAI,EAAJA;AAAnC,SAAd;AACD;AAVU,KAAb;AAFY;AAcb;;;;6BACQ;AACP,aACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,oBAAO,KAAKJ,KAAZ,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKU,KAAL,CAAWC,QADd,CADF;AAMD;;;;EAvB0Cf,S;;SAAxBG,e","sourcesContent":["import React, { Component } from 'react';\nexport const MyContext = React.createContext();\nexport default class ContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      currentlyReading: [],\n      wantToRead: [],\n      read: [],\n      addBooks: books => {\n        const currentlyReading = books.filter(book => book.shelf==='currentlyReading');\n        const wantToRead = books.filter(book => book.shelf==='wantToRead');\n        const read = books.filter(book => book.shelf==='read');\n        this.setState({books,currentlyReading,wantToRead,read});\n      }\n    };\n  }\n  render() {\n    return (\n      <MyContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </MyContext.Provider>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}