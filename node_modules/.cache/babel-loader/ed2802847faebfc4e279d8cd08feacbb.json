{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Bubenceto/Desktop/React/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Bubenceto/Desktop/React/myreads/src/components/Book.js\";\nimport React, { Component } from 'react';\nimport { update } from '../BooksAPI';\n\nvar Book =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Book, _Component);\n\n  function Book() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Book);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Book)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var shelf, book, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.persist();\n                _context.prev = 1;\n                shelf = e.target.value; // the constant that will be changed\n\n                book = _this.props; // all the books passed from the Home page\n\n                _context.next = 6;\n                return update(book, shelf);\n\n              case 6:\n                result = _context.sent;\n\n                // update method from BookAPI used to move the book to the new shelf\n                _this.props.updateBook(book, shelf, result); //updates the shelf for the book\n\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Book, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-cover\",\n        style: {\n          width: 128,\n          height: 193,\n          backgroundImage: \"url(\".concat(this.props.imageLinks ? this.props.imageLinks.thumbnail : '', \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleChange,\n        value: this.props.shelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"None\")))), React.createElement(\"div\", {\n        className: \"book-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: \"book-authors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.authors ? this.props.authors[0] : 'No Author')));\n    }\n  }]);\n\n  return Book;\n}(Component);\n\nexport { Book as default };","map":{"version":3,"sources":["/Users/Bubenceto/Desktop/React/myreads/src/components/Book.js"],"names":["React","Component","update","Book","handleChange","e","persist","shelf","target","value","book","props","result","updateBook","console","log","width","height","backgroundImage","imageLinks","thumbnail","title","authors"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,aAAvB;;IAEqBC,I;;;;;;;;;;;;;;;;;;UASnBC,Y;;;;;+BAAe,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,CAAC,CAACC,OAAF;AADa;AAGLC,gBAAAA,KAHK,GAGGF,CAAC,CAACG,MAAF,CAASC,KAHZ,EAGkB;;AACvBC,gBAAAA,IAJK,GAIE,MAAKC,KAJP,EAIa;;AAJb;AAAA,uBAKUT,MAAM,CAACQ,IAAD,EAAOH,KAAP,CALhB;;AAAA;AAKLK,gBAAAA,MALK;;AAK8B;AACzC,sBAAKD,KAAL,CAAWE,UAAX,CAAsBH,IAAtB,EAA2BH,KAA3B,EAAiCK,MAAjC,EANW,CAM8B;;;AAN9B;AAAA;;AAAA;AAAA;AAAA;AAQXE,gBAAAA,OAAO,CAACC,GAAR;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAYN;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,gBAAS,KAAKP,KAAL,CAAWQ,UAAX,GAAwB,KAAKR,KAAL,CAAWQ,UAAX,CAAsBC,SAA9C,GAA0D,EAAnE;AAA1C,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,QAAQ,EAAE,KAAKhB,YAAvB;AAAqC,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWJ,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAFF,CAFF,CADF,EAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKI,KAAL,CAAWU,KAAxC,CAfF,EAiBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKV,KAAL,CAAWW,OAAX,GAAqB,KAAKX,KAAL,CAAWW,OAAX,CAAmB,CAAnB,CAArB,GAA6C,WAA5E,CAjBF,CADF,CADF;AAuBD;;;;EA7C+BrB,S;;SAAbE,I","sourcesContent":["import React, { Component } from 'react';\nimport { update } from '../BooksAPI';\n\nexport default class Book extends Component {\n/* \n  One of the cool things about async/await is that it makes sometimes very ugly \n  nested asynchronous code look just as simple and straightforward as synchronous code, \n  but itâ€™s not synchronous code.\n  If you need to access an event in an asynchronous way, \n  en you should call event.persist() at the beginning of the function. \n  This will take the SyntheticEvent out of the pool and prevent it from \n  being reclaimed by React.*/\n  handleChange = async e => {\n    e.persist();\n    try {\n      const shelf = e.target.value;// the constant that will be changed\n      const book = this.props;// all the books passed from the Home page\n      const result = await update(book, shelf);// update method from BookAPI used to move the book to the new shelf\n      this.props.updateBook(book,shelf,result);//updates the shelf for the book\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  render() {\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${this.props.imageLinks ? this.props.imageLinks.thumbnail : ''})` }}></div>\n            <div className=\"book-shelf-changer\">\n            {/* the handleChange function from above applied to the drop-down, in order the change to happen*/}\n              <select onChange={this.handleChange} value={this.props.shelf}>\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          {/* Populates each book's title from the BooksAPI */}\n          <div className=\"book-title\">{this.props.title}</div> \n          {/* Populates each first book's author from the BooksAPI after checking if any authors exist for this book*/} \n          <div className=\"book-authors\">{this.props.authors ? this.props.authors[0] : 'No Author'}</div>\n        </div>\n      </li>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}